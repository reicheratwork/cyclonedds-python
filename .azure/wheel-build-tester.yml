#
# Copyright(c) 2021 ADLINK Technology Limited and others
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License v. 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0, or the Eclipse Distribution License
# v. 1.0 which is available at
# http://www.eclipse.org/org/documents/edl-v10.php.
#
# SPDX-License-Identifier: EPL-2.0 OR BSD-3-Clause
#


trigger: [ '*' ]


variables:
  CIBW_BUILD_VERBOSITY: 0
  CIBW_BEFORE_BUILD: "pip install delvewheel==0.0.12 delocate==0.8.2"
  CIBW_REPAIR_WHEEL_COMMAND_MACOS: "printenv && delocate-wheel -w {dest_dir} {wheel}"
  CIBW_REPAIR_WHEEL_COMMAND_LINUX: "printenv && auditwheel repair -w {dest_dir} {wheel}"
  CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: "SET && delvewheel repair --wheel_dir {dest_dir} {wheel}"
  CIBW_SKIP: pp*  # No PyPy builds
  CIBW_ARCHS_MACOS: "x86_64 universal2 arm64"
  CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
  CIBW_MANYLINUX_I686_IMAGE: manylinux2014
  CIBW_BEFORE_ALL_LINUX: "git clone https://github.com/eclipse-cyclonedds/cyclonedds.git main && mkdir -p build /project/install && cd build &&
                    cmake ../main -DCMAKE_INSTALL_PREFIX=/project/install -DBUILD_IDLC=0 -DBUILD_SCHEMA=0 -DENABLE_SHM=0
                    -DENABLE_TOPIC_DISCOVERY=1 -DENABLE_TYPE_DISCOVERY=1 -DENABLE_SECURITY=0 &&
                    cmake --build . --target install"
  CIBW_BEFORE_ALL_MACOS: "git clone https://github.com/eclipse-cyclonedds/cyclonedds.git main && mkdir -p build $CYCLONEDDS_HOME && cd build &&
                    cmake ../main -DCMAKE_INSTALL_PREFIX=$CYCLONEDDS_HOME -DBUILD_IDLC=0 -DBUILD_SCHEMA=0 -DENABLE_SHM=0
                    -DENABLE_TOPIC_DISCOVERY=1 -DENABLE_TYPE_DISCOVERY=1 -DENABLE_SECURITY=0 &&
                    cmake --build . --target install"
  CIBW_BEFORE_ALL_WINDOWS: "cd $(Pipeline.Workspace) &&
                    git clone https://github.com/eclipse-cyclonedds/cyclonedds.git main && mkdir -p build install && cd build &&
                    cmake ../main -DCMAKE_INSTALL_PREFIX=../install -DBUILD_IDLC=0 -DBUILD_SCHEMA=0 -DENABLE_SHM=0
                    -DENABLE_TOPIC_DISCOVERY=1 -DENABLE_TYPE_DISCOVERY=1 -DENABLE_SECURITY=0 &&
                    cmake --build . --target install"


jobs:
- job: WheelTest
  pool:
    vmImage: $(image)
  strategy:
    matrix:
      'Ubuntu 20.04 LTS':
        image: ubuntu-20.04
      'macOS 10.15':
        image: macOS-10.15
        cc: clang
      'Windows Server 2019':
        image: windows-2019
  steps:
  - template: /.azure/templates/build-wheel.yml